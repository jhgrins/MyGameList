name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.3.1

      - uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --legacy-peer-deps

      - name: Install ESLint Globally
        run: npm install -g eslint

      - name: Run Linter
        run: npm run lint

  types:
    name: Types
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.3.1

      - uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --legacy-peer-deps

      - name: Run Type Checker
        run: npm run types

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.3.1

      - uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --legacy-peer-deps

      - name: Run Tests
        run: npm test
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          DDB_ENDPOINT: ${{ secrets.DDB_ENDPOINT }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          APPLE_CLIENT_ID: ${{ secrets.APPLE_CLIENT_ID }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          TWITCH_CLIENT_ID: ${{ secrets.TWITCH_CLIENT_ID }}
          TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}
          AUTH_KEY: ${{ secrets.AUTH_KEY }}
          PASSWORD_KEY: ${{ secrets.PASSWORD_KEY }}
